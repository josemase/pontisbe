generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://ueuvkjrt62ijg0:p9ad700fb79ccd59e641eaae1b1762b1e2b7c250fd4a1cec9de5462012ba69a9f@cd1goc44htrmfn.cluster-czrs8kj4isg7.us-east-1.rds.amazonaws.com:5432/dauc2t7b3pek0m"
}

model profile {
  id            String    @id @default(uuid()) @db.Uuid
  userId        String
  fullName      String
  birthDate     DateTime?
  deathDate     DateTime?
  birthPlace    String?
  deathPlace    String?
  introduction  String?
  profileImages String[]
  interests     Int[]
  religion      String?
  links         String[]
  story         story[]
  media         media[]
  family        family[]
}

model story {
  id               Int     @id @default(autoincrement())
  profileId        String  @db.Uuid
  title            String
  content          String
  date             Int
  biographySection String
  profile          profile @relation(fields: [profileId], references: [id])
  media            media[]
}

model media {
  id        Int     @id @default(autoincrement())
  profileId String  @db.Uuid
  storyId   Int?
  media     String
  profile   profile @relation(fields: [profileId], references: [id])
  story     story?  @relation(fields: [storyId], references: [id])
}

model family {
  id        Int     @id @default(autoincrement())
  profileId String  @db.Uuid
  fullName  String
  relation  String
  profile   profile @relation(fields: [profileId], references: [id])
}
